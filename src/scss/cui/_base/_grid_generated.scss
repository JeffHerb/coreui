//   ========================================================
// * @name       _grid.scss
// * @desc       Responsive grid styles
// * @author     Manolo Farfan, Craig Patik
// * @version    1.0.0.20141231
// * @see        https://github.com/ny/frg-coreui
//   ========================================================

// * @section    Row and col structures
// * @desc       The grid's row and columns (default cols 12)
// *             - Fluid & fixed + fluid layouts with fillers
// *             - Clearfix to force new row
// * --------------------------------------------------------

/***
 * ==================================
 *   Style Specific Mixins
 * ==================================
 ***/

$columns: 12;

@mixin build-grid($breakpointName, $totalColumns) {

    @function column-width-calc($colNumber, $colTotal) {
        @return percentage($colNumber / $colTotal);
    }

    // Loop through each column Creating the grid.
    @for $i from 1 to $totalColumns + 1 {

        // Create this column number and assign it the correct width.
        .cui-col-#{$breakpointName}-#{$i} {
            width: column-width-calc($i, $totalColumns);
        }

    }

    // Loop through again, this time creating the push
    @for $i from 1 to $totalColumns {

        // Create this column number and assign it the correct width.
        .cui-#{$breakpointName}-push-#{$i} {
            margin-left: column-width-calc($i, $totalColumns);
        }

    }

    // Loop through again, this time creating the pull
    @for $i from 1 to $totalColumns {

        // Create this column number and assign it the correct width.
        .cui-#{$breakpointName}-pull-#{$i} {
            margin-right: column-width-calc($i, $totalColumns);
        }
    }
}

/***
 * ==================================
 *   Styles
 * ==================================
 ***/

.cui-row {
    width: 100%;
    clear: both;
    @include clearfix;
}

[class*="cui-col-small-"],
[class*="cui-fixed-col-"] {
    float: left;
}

[class*="cui-col-"],
[class*="cui-fixed-col-"],
[class*="cui-filler-col-"] {
    position: relative;
    @include clearfix;
}

.cui-filler-col-sm {
    float: none;
    width: auto;
    @include clearfix;
}

.cui-row,
[class*="cui-filler-col-"],
.cui-clearfix {
    @include clearfix;
}


// * @section    Mobile-first (small) default column widths
// * --------------------------------------------------------
@include build-grid("small", $columns);

// * @section    Tablet (medium) column widths
// * --------------------------------------------------------
@media only screen and (min-width: $bp-tablet) {
    [class*="cui-col-medium-"] {
        float: left;
    }

    .cui-filler-col-md {
        float: none;
        width: auto;
        @include clearfix;
    }

    @include build-grid("medium", $columns);

    [class$="-200"] {
        width: 200px;
    }
}

// * @section    Desktop (large) column widths
// * --------------------------------------------------------
@media only screen and (min-width: $bp-desktop) {
    [class*="cui-col-large-"] {
        float: left;
    }

    .cui-filler-col-lg {
        float: none;
        width: auto;
        overflow: hidden;
    }

    @include build-grid("large", $columns);
}

// * @section    Push columns
// * --------------------------------------------------------
.cui-pull-right {
    float: right;
}
